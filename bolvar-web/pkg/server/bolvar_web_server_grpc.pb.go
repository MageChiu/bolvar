// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.2
// source: bolvar_web_server.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BolvarServiceClient is the client API for BolvarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BolvarServiceClient interface {
	// Sends a greeting
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventReply, error)
}

type bolvarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBolvarServiceClient(cc grpc.ClientConnInterface) BolvarServiceClient {
	return &bolvarServiceClient{cc}
}

func (c *bolvarServiceClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventReply, error) {
	out := new(CreateEventReply)
	err := c.cc.Invoke(ctx, "/api.BolvarService/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BolvarServiceServer is the server API for BolvarService service.
// All implementations must embed UnimplementedBolvarServiceServer
// for forward compatibility
type BolvarServiceServer interface {
	// Sends a greeting
	CreateEvent(context.Context, *CreateEventRequest) (*CreateEventReply, error)
	mustEmbedUnimplementedBolvarServiceServer()
}

// UnimplementedBolvarServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBolvarServiceServer struct {
}

func (UnimplementedBolvarServiceServer) CreateEvent(context.Context, *CreateEventRequest) (*CreateEventReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (UnimplementedBolvarServiceServer) mustEmbedUnimplementedBolvarServiceServer() {}

// UnsafeBolvarServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BolvarServiceServer will
// result in compilation errors.
type UnsafeBolvarServiceServer interface {
	mustEmbedUnimplementedBolvarServiceServer()
}

func RegisterBolvarServiceServer(s grpc.ServiceRegistrar, srv BolvarServiceServer) {
	s.RegisterService(&BolvarService_ServiceDesc, srv)
}

func _BolvarService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BolvarServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BolvarService/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BolvarServiceServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BolvarService_ServiceDesc is the grpc.ServiceDesc for BolvarService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BolvarService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.BolvarService",
	HandlerType: (*BolvarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _BolvarService_CreateEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bolvar_web_server.proto",
}
